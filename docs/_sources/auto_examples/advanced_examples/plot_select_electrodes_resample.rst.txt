
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/advanced_examples/plot_select_electrodes_resample.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_advanced_examples_plot_select_electrodes_resample.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_advanced_examples_plot_select_electrodes_resample.py:


================================
Select electrodes and resampling
================================

Within paradigm, it is possible to restrict analysis only to a subset of
electrodes and to resample to a specific sampling rate. There is also a
utility function to select common electrodes shared between datasets.
This tutorial demonstrates how to use this functionality.

.. GENERATED FROM PYTHON SOURCE LINES 11-29

.. code-block:: default

    # Authors: Sylvain Chevallier <sylvain.chevallier@uvsq.fr>
    #
    # License: BSD (3-clause)
    import matplotlib.pyplot as plt
    from mne.decoding import CSP
    from pyriemann.estimation import Covariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.linear_model import LogisticRegression as LR
    from sklearn.pipeline import make_pipeline

    import moabb.analysis.plotting as moabb_plt
    from moabb.datasets import BNCI2014001, Zhou2016
    from moabb.datasets.utils import find_intersecting_channels
    from moabb.evaluations import WithinSessionEvaluation
    from moabb.paradigms import LeftRightImagery









.. GENERATED FROM PYTHON SOURCE LINES 30-34

Datasets
--------

Load 2 subjects of BNCI 2014-004 and Zhou2016 datasets, with 2 session each

.. GENERATED FROM PYTHON SOURCE LINES 34-40

.. code-block:: default


    subj = [1, 2]
    datasets = [Zhou2016(), BNCI2014001()]
    for d in datasets:
        d.subject_list = subj








.. GENERATED FROM PYTHON SOURCE LINES 41-47

Paradigm
--------

Restrict further analysis to specified channels, here C3, C4, and Cz.
Also, use a specific resampling. In this example, all datasets are
set to 200 Hz.

.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: default


    paradigm = LeftRightImagery(channels=["C3", "C4", "Cz"], resample=200.0)








.. GENERATED FROM PYTHON SOURCE LINES 51-56

Evaluation
----------

The evaluation is conducted on with CSP+LDA, only on the 3 electrodes, with
a sampling rate of 200 Hz.

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default


    evaluation = WithinSessionEvaluation(paradigm=paradigm, datasets=datasets)
    csp_lda = make_pipeline(CSP(n_components=2), LDA())
    ts_lr = make_pipeline(
        Covariances(estimator="oas"), TangentSpace(metric="riemann"), LR(C=1.0)
    )
    results = evaluation.process({"csp+lda": csp_lda, "ts+lr": ts_lr})
    print(results.head())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

          score      time  samples  ... n_sessions    dataset  pipeline
    0  0.878503  0.021208    144.0  ...          2   001-2014   csp+lda
    1  0.869864  0.022608    144.0  ...          2   001-2014   csp+lda
    2  0.483333  0.022285    144.0  ...          2   001-2014   csp+lda
    3  0.518844  0.022681    144.0  ...          2   001-2014   csp+lda
    4  0.865152  0.023656    119.0  ...          3  Zhou 2016   csp+lda

    [5 rows x 9 columns]




.. GENERATED FROM PYTHON SOURCE LINES 66-73

Electrode selection
-------------------

It is possible to select the electrodes that are shared by all datasets
using the `find_intersecting_channels` function. Datasets that have 0
overlap with others are discarded. It returns the set of common channels,
as well as the list of datasets with valid channels.

.. GENERATED FROM PYTHON SOURCE LINES 73-81

.. code-block:: default


    electrodes, datasets = find_intersecting_channels(datasets)
    evaluation = WithinSessionEvaluation(
        paradigm=paradigm, datasets=datasets, overwrite=True, suffix="resample"
    )
    results = evaluation.process({"csp+lda": csp_lda, "ts+lr": ts_lr})
    print(results.head())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Searching dataset: Zhou2016
    Searching dataset: BNCI2014001
          score      time  samples  ... n_sessions    dataset  pipeline
    0  0.857347  0.021013    144.0  ...          2   001-2014   csp+lda
    1  0.856122  0.023419    144.0  ...          2   001-2014   csp+lda
    2  0.442245  0.020887    144.0  ...          2   001-2014   csp+lda
    3  0.531565  0.021407    144.0  ...          2   001-2014   csp+lda
    4  0.850379  0.021628    119.0  ...          3  Zhou 2016   csp+lda

    [5 rows x 9 columns]




.. GENERATED FROM PYTHON SOURCE LINES 82-87

Plot results
------------

Compare the obtained results with the two pipelines, CSP+LDA and logistic
regression computed in the tangent space of the covariance matrices.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default


    fig = moabb_plt.paired_plot(results, "csp+lda", "ts+lr")
    plt.show()



.. image:: /auto_examples/advanced_examples/images/sphx_glr_plot_select_electrodes_resample_001.png
    :alt: plot select electrodes resample
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  35.674 seconds)


.. _sphx_glr_download_auto_examples_advanced_examples_plot_select_electrodes_resample.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_select_electrodes_resample.py <plot_select_electrodes_resample.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_select_electrodes_resample.ipynb <plot_select_electrodes_resample.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
