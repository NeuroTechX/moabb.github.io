
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/plot_Getting_Started.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorials_plot_Getting_Started.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_plot_Getting_Started.py:

=========================
Getting Started
=========================

This tutorial takes you through a basic working example of how to use this
codebase, including all the different components, up to the results
generation. If you'd like to know about the statistics and plotting, see the
next tutorial.

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default

    # Authors: Vinay Jayaram <vinayjayaram13@gmail.com>
    #
    # License: BSD (3-clause)









.. GENERATED FROM PYTHON SOURCE LINES 17-22

Introduction
--------------------
To use the codebase you need an evaluation and a paradigm, some algorithms,
and a list of datasets to run it all on. You can find those in the following
submodules; detailed tutorials are given for each of them.

.. GENERATED FROM PYTHON SOURCE LINES 22-29

.. code-block:: default


    import numpy as np
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.model_selection import GridSearchCV
    from sklearn.pipeline import make_pipeline
    from sklearn.svm import SVC








.. GENERATED FROM PYTHON SOURCE LINES 30-32

If you would like to specify the logging level when it is running, you can
use the standard python logging commands through the top-level moabb module

.. GENERATED FROM PYTHON SOURCE LINES 32-39

.. code-block:: default

    import moabb
    from moabb.datasets import BNCI2014001, utils
    from moabb.evaluations import CrossSessionEvaluation
    from moabb.paradigms import LeftRightImagery
    from moabb.pipelines.features import LogVariance









.. GENERATED FROM PYTHON SOURCE LINES 40-43

In order to create pipelines within a script, you will likely need at least
the make_pipeline function. They can also be specified via a .yml file. Here
we will make a couple pipelines just for convenience

.. GENERATED FROM PYTHON SOURCE LINES 43-47

.. code-block:: default



    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 48-56

Create pipelines
----------------

We create two pipelines: channel-wise log variance followed by LDA, and
channel-wise log variance followed by a cross-validated SVM (note that a
cross-validation via scikit-learn cannot be described in a .yml file). For
later in the process, the pipelines need to be in a dictionary where the key
is the name of the pipeline and the value is the Pipeline object

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default


    pipelines = {}
    pipelines["AM+LDA"] = make_pipeline(LogVariance(), LDA())
    parameters = {"C": np.logspace(-2, 2, 10)}
    clf = GridSearchCV(SVC(kernel="linear"), parameters)
    pipe = make_pipeline(LogVariance(), clf)

    pipelines["AM+SVM"] = pipe








.. GENERATED FROM PYTHON SOURCE LINES 66-71

Datasets
-----------------

Datasets can be specified in many ways: Each paradigm has a property
'datasets' which returns the datasets that are appropriate for that paradigm

.. GENERATED FROM PYTHON SOURCE LINES 71-75

.. code-block:: default


    print(LeftRightImagery().datasets)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [<moabb.datasets.bnci.BNCI2014001 object at 0x7fd858a16d00>, <moabb.datasets.bnci.BNCI2014004 object at 0x7fd858a16310>, <moabb.datasets.gigadb.Cho2017 object at 0x7fd858a161c0>, <moabb.datasets.Lee2019.Lee2019_MI object at 0x7fd858a16ca0>, <moabb.datasets.mpi_mi.MunichMI object at 0x7fd858a16eb0>, <moabb.datasets.physionet_mi.PhysionetMI object at 0x7fd858a16f40>, <moabb.datasets.schirrmeister2017.Schirrmeister2017 object at 0x7fd858a164f0>, <moabb.datasets.bbci_eeg_fnirs.Shin2017A object at 0x7fd858a16a60>, <moabb.datasets.Weibo2014.Weibo2014 object at 0x7fd858a164c0>, <moabb.datasets.Zhou2016.Zhou2016 object at 0x7fd858a16220>]




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Or you can run a search through the available datasets:

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: default

    print(utils.dataset_search(paradigm="imagery", min_subjects=6))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [<moabb.datasets.alex_mi.AlexMI object at 0x7fd858a161c0>, <moabb.datasets.bnci.BNCI2014001 object at 0x7fd858a16310>, <moabb.datasets.bnci.BNCI2014002 object at 0x7fd858a16d00>, <moabb.datasets.bnci.BNCI2014004 object at 0x7fd858a16850>, <moabb.datasets.bnci.BNCI2015001 object at 0x7fd858a16bb0>, <moabb.datasets.bnci.BNCI2015004 object at 0x7fd9197b21c0>, <moabb.datasets.gigadb.Cho2017 object at 0x7fd91dada2e0>, <moabb.datasets.Lee2019.Lee2019_MI object at 0x7fd9197b2460>, <moabb.datasets.mpi_mi.MunichMI object at 0x7fd9197b23a0>, <moabb.datasets.upper_limb.Ofner2017 object at 0x7fd9197b27c0>, <moabb.datasets.physionet_mi.PhysionetMI object at 0x7fd9197b2190>, <moabb.datasets.schirrmeister2017.Schirrmeister2017 object at 0x7fd9197b2490>, <moabb.datasets.bbci_eeg_fnirs.Shin2017A object at 0x7fd9197b2820>, <moabb.datasets.Weibo2014.Weibo2014 object at 0x7fd9197b24c0>]




.. GENERATED FROM PYTHON SOURCE LINES 80-82

Or you can simply make your own list (which we do here due to computational
constraints)

.. GENERATED FROM PYTHON SOURCE LINES 82-87

.. code-block:: default


    dataset = BNCI2014001()
    dataset.subject_list = dataset.subject_list[:2]
    datasets = [dataset]








.. GENERATED FROM PYTHON SOURCE LINES 88-96

Paradigm
--------------------

Paradigms define the events, epoch time, bandpass, and other preprocessing
parameters. They have defaults that you can read in the documentation, or you
can simply set them as we do here. A single paradigm defines a method for
going from continuous data to trial data of a fixed size. To learn more look
at the tutorial Exploring Paradigms

.. GENERATED FROM PYTHON SOURCE LINES 96-101

.. code-block:: default


    fmin = 8
    fmax = 35
    paradigm = LeftRightImagery(fmin=fmin, fmax=fmax)








.. GENERATED FROM PYTHON SOURCE LINES 102-108

Evaluation
--------------------

An evaluation defines how the training and test sets are chosen. This could
be cross-validated within a single recording, or across days, or sessions, or
subjects. This also is the correct place to specify multiple threads.

.. GENERATED FROM PYTHON SOURCE LINES 108-114

.. code-block:: default


    evaluation = CrossSessionEvaluation(
        paradigm=paradigm, datasets=datasets, suffix="examples", overwrite=False
    )
    results = evaluation.process(pipelines)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    001-2014-CrossSession:   0%|          | 0/2 [00:00<?, ?it/s]    001-2014-CrossSession:  50%|#####     | 1/2 [00:03<00:03,  3.61s/it]    001-2014-CrossSession: 100%|##########| 2/2 [00:07<00:00,  3.70s/it]    001-2014-CrossSession: 100%|##########| 2/2 [00:07<00:00,  3.69s/it]




.. GENERATED FROM PYTHON SOURCE LINES 115-117

Results are returned as a pandas DataFrame, and from here you can do as you
want with them

.. GENERATED FROM PYTHON SOURCE LINES 117-119

.. code-block:: default


    print(results.head())




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

          score      time  samples subject  ... channels  n_sessions   dataset pipeline
    0  0.801698  0.034686    144.0       1  ...       22           2  001-2014   AM+LDA
    1  0.786458  0.031695    144.0       1  ...       22           2  001-2014   AM+LDA
    2  0.498650  0.031447    144.0       2  ...       22           2  001-2014   AM+LDA
    3  0.576582  0.031867    144.0       2  ...       22           2  001-2014   AM+LDA
    4  0.773920  0.170067    144.0       1  ...       22           2  001-2014   AM+SVM

    [5 rows x 9 columns]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.401 seconds)


.. _sphx_glr_download_auto_tutorials_plot_Getting_Started.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_Getting_Started.py <plot_Getting_Started.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_Getting_Started.ipynb <plot_Getting_Started.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
